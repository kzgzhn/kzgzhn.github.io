{"version":3,"sources":["helpers/kaspi-types.js","helpers/number-format.js","GroupListItem.jsx","helpers/plural.js","UploadButton.jsx","helpers/kaspi-parse2.js","GroupList.jsx","GroupItem.jsx","GroupItemChart.jsx","Group.jsx","App.js","reportWebVitals.js","index.js"],"names":["kaspiTypes","numberFormat","int","Intl","NumberFormat","format","GroupListItem","item","setGroup","console","log","typeName","name","count","n","className","onClick","types","map","type","index","parseInt","sum","sum2","UploadButton","setData","dataExists","parsePdf","rawData","a","pdfjsLib","promise","pdf","Promise","all","Array","numPages","keys","num","getPage","page","getTextContent","pages","pagesGroupByLine","Object","values","items","reduce","rv","x","v","transform","push","str","trim","data","flat","length","shift","filter","match","date","Date","replace","descrRaw","descrWithoutMiddleName","sumParse","raw","parseFloat","descr","inputFile","useRef","useEffect","f","current","click","document","addEventListener","removeEventListener","ref","accept","style","display","onChange","e","file","target","files","fr","FileReader","onload","Uint8Array","result","readAsArrayBuffer","workerSrc","PDFJSWorker","kaspiData2","json2","minDate","maxDate","data2","forEach","key","plus","minus","_types","id","create","slice","sort","b","GroupList","useState","setItems","setMaxDate","setMinDate","_data","dateFormatter","DateTimeFormat","year","month","day","GroupItem","toLocaleDateString","GroupItemChart","monthsList","_minDate","setDate","_maxDate","setMonth","getMonth","chartX","toISOString","chartListPlus","chartListMinus","chartListPlus2","chartListMinus2","series","some","label","show","position","rotate","showBackground","backgroundStyle","color","emphasis","focus","echarts","setOption","xAxis","axisLabel","interval","yAxis","height","Group","group","resetGroup","esc","keyCode","body","overflow","toLocaleString","App","dispatchEvent","Event","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uTAAO,IAAMA,EAAa,CACtB,6CAAW,CACP,6CACA,6CACA,8CAEJ,6CAAW,CACP,6CACA,mDACA,0DAEJ,+DAAc,CACV,+DACA,+DACA,gEAEJ,uCAAU,CACN,uCACA,uCACA,yCClBKC,EAAe,SAAAC,GAAG,OAAI,IAAIC,KAAKC,aAAa,MAAMC,OAAOH,I,OCGvD,SAASI,EAAT,GAA0C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,SAEzCC,QAAQC,IAAI,4BAEZ,IAAMC,EAAW,SAACC,EAAMC,GACpB,OAAQb,EAAWY,GAAeZ,EAAWY,ICTvBE,EDS8BD,GCPhD,KAAO,GAAKC,EAAI,MAAQ,GACtB,EACCA,EAAI,IAAM,GAAKA,EAAI,IAAM,IAAMA,EAAI,IAAM,IAAMA,EAAI,KAAO,IAC3D,EAEA,IAEW,GDA4CF,ECT9D,IAAuBE,GDY1B,OACI,sBACIC,UAAU,mHACVC,QAAS,kBAAMR,EAASD,IAF5B,UAGI,qBAAKQ,UAAU,mCAAf,SACI,gCACI,6BAAKR,EAAKK,OACV,qBAAKG,UAAU,6BAAf,SACKR,EAAKU,MAAQV,EAAKU,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACzB,iCACKA,EAAQ,KAAO,GADpB,IACyBD,EAAKN,MAD9B,IACsCF,EAASQ,EAAKP,KAAMO,EAAKN,SADpDM,EAAKP,SAGhB,UAIhB,sBAAKG,UAAU,+BAAf,UACI,sBAAMA,UAAU,mBAAhB,SACKM,SAASd,EAAKe,KAAOrB,EAAaM,EAAKe,KAAO,KAG/CD,SAASd,EAAKgB,MACR,uBAAMR,UAAU,uCAAhB,cAAyDd,EAAaM,EAAKgB,SAC3E,S,2DE5BX,SAASC,EAAT,GAA8C,IAAvBC,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,WAE3CjB,QAAQC,IAAI,2BAEZ,IAAMiB,EAAQ,uCAAG,WAAMC,GAAN,qBAAAC,EAAA,sEACKC,cAAqBF,GAASG,QADnC,cACPC,EADO,gBAGOC,QAAQC,IAAI,YAAIC,MAAMH,EAAII,UAAUC,QAAQnB,IAAhC,uCAAoC,WAAMoB,GAAN,eAAAT,EAAA,sEAC7CG,EAAIO,QAAQD,EAAM,GAD2B,cAC1DE,EAD0D,gBAEnDA,EAAKC,iBAF8C,mFAApC,wDAHnB,OAGPC,EAHO,OAQPC,EAAmBD,EAAMxB,KAAI,SAAAX,GAQ/B,OAAOqC,OAAOC,OAAetC,EAAKuC,MANpBC,QAAO,SAAUC,EAAIC,GAC3B,IAAIC,EAAID,EAAEE,UAAU,GAEpB,OADCH,EAAGE,GAAKF,EAAGE,IAAM,IAAIE,KAAKH,EAAEI,IAAIC,QAC1BN,IACR,QAmBXO,GALAA,GAPAA,GAFIA,EAAOZ,EAAiBa,QAEhBtC,KAAI,SAAAX,GAIZ,OAHoB,IAAhBA,EAAKkD,QACLlD,EAAKmD,QAEFnD,MAGCoD,QAAO,SAAApD,GACf,OAAuB,IAAhBA,EAAKkD,QAAgB,UAAGlD,EAAK,IAAKqD,MAAM,6BAIvC1C,KAAI,SAAAX,GACZ,IAAIsD,EAAO,IAAIC,KAAKvD,EAAK,GAAGwD,QAAQ,4BAA6B,eAC7DzC,EAAMf,EAAK,GACXY,EAAOZ,EAAK,GACZyD,EAAWzD,EAAK,GAAGwD,QAAQ,KAAM,KACjCE,EAAyBD,EAASD,QAAQ,4BAA6B,SAEvEG,EAAW5C,EAAIsC,MAAM,yBAQzB,MAAO,CACHC,OACAvC,IARJA,EAAM,CACF6C,IAAK7C,EACLH,KAAM+C,EAAS,GACf5C,IAAK8C,WAAWF,EAAS,GAAGH,QAAQ,IAAK,IAAIA,QAAQ,IAAK,OAM1D5C,OACAkD,MAAOJ,EACPD,eAIRvC,EAAQ8B,GAzDK,4CAAH,sDAsERe,EAAYC,mBAYlB,OAVAC,qBAAU,WACN,IAAMC,EAAI,WACNH,EAAUI,QAAQC,SAGtB,OADAC,SAASC,iBAAiB,qBAAsBJ,GAAG,GAC5C,WACHG,SAASE,oBAAoB,qBAAsBL,GAAG,MAE3D,IAGC,sBAAK1D,UAAWW,EAAa,GAAK,SAAlC,UACI,wBACIP,KAAK,SACLJ,UAAU,2EACVC,QAAS,kBAAMsD,EAAUI,QAAQC,SAHrC,SAKKjD,EAAa,mIAA4B,sGAE9C,uBACIP,KAAK,OACL4D,IAAKT,EACLU,OAAO,OACPC,MAAO,CAACC,QAAS,QACjBC,SApCa,SAAAC,GACrB,IAAMC,EAAOD,EAAEE,OAAOC,MAAM,GAC5B,GAAKF,EAAL,CAGA,IAAMG,EAAK,IAAIC,WACfD,EAAGE,OAAS,SAAAN,GAAC,OAAIzD,EAAS,IAAIgE,WAAWP,EAAEE,OAAOM,UAClDJ,EAAGK,kBAAkBR,UAzE7BvD,sBAA6BgE,UAAYC,ICLlC,IAAMC,EAAa,SAACC,GAIvB,IAAIA,EACA,MAAO,CACHnD,MAAO,KACPoD,QAAS,KACTC,QAAS,MAIjB,IAaID,EAASC,EALTC,EAAgBH,EAPNlD,QAAO,SAAUC,EAAIC,GAC3B,IAAIC,EAAI,IAAMD,EAAEoB,MAEhB,OADCrB,EAAGE,GAAKF,EAAGE,IAAM,IAAIE,KAAKH,GACpBD,IACR,IAKHO,EAAO,GAiEX,OA5DAX,OAAOP,KAAK+D,GAAOC,SAAQ,SAACC,GACxB,IAAIC,EAAO,EACPC,EAAQ,EACNC,EAAS,GAEfL,EAAME,GAAKD,SAAQ,SAAC9F,GACM,MAAlBA,EAAKe,IAAIH,OACTqF,GAASjG,EAAKe,IAAIA,KAGA,MAAlBf,EAAKe,IAAIH,OACToF,GAAQhG,EAAKe,IAAIA,KAIhBmF,EAAOlG,EAAKY,QACbsF,EAAOlG,EAAKY,MAAQ,KAEtBsF,EAAOlG,EAAKY,QAIT+E,GAAWA,EAAU3F,EAAKsD,QAC3BqC,EAAU3F,EAAKsD,QAGdsC,GAAWA,EAAU5F,EAAKsD,QAC3BsC,EAAU5F,EAAKsD,SAKvB,IAAM5C,EAAQ2B,OAAOP,KAAKoE,GAAQvF,KAAI,SAAAoF,GAClC,MAAO,CACH1F,KAAM0F,EACNzF,MAAO4F,EAAOH,QAvCX,SAACI,EAAI9F,EAAMU,EAAKC,EAAMN,GAAUsC,EAAKH,KAAK,CAACsD,KAAI9F,OAAMU,MAAKC,OAAMN,UA2C3E0F,CAAOL,EAAKA,EAAIM,MAAM,GAAIJ,EAAOD,EAAMtF,MAqBpC,CACH6B,MAHJS,EAAOA,EAAKsD,MAhBZ,SAAiBhF,EAAGiF,GAChB,OAAIjF,EAAEP,IAAMwF,EAAExF,KACF,EAERO,EAAEP,IAAMwF,EAAExF,IACH,EAEPO,EAAEN,KAAOuF,EAAEvF,MACH,EAERM,EAAEN,KAAOuF,EAAEvF,KACJ,EAEJ,KAOP2E,UACAC,YCpFO,SAASY,EAAT,GAA+C,IAA3BvG,EAA0B,EAA1BA,SAAU+C,EAAgB,EAAhBA,KAAM9B,EAAU,EAAVA,QAE/ChB,QAAQC,IAAI,wBAEZ,MAA0BsG,qBAA1B,mBAAOlE,EAAP,KAAcmE,EAAd,KACA,EAA8BD,qBAA9B,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAA8BF,qBAA9B,mBAAOd,EAAP,KAAgBiB,EAAhB,KAEA3C,qBAAU,WACN,GAAGjB,EAAM,CACL,IAAM6D,EAAQpB,EAAWzC,GACzB0D,EAASG,EAAMtE,OACfoE,EAAWE,EAAMjB,SACjBgB,EAAWC,EAAMlB,YAEtB,CAAC3C,IAEJ,IAAM8D,EAAgB,SAAAxD,GAAI,OAAI,IAAI1D,KAAKmH,eAAe,KAAM,CACxDC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNpH,OAAOwD,IAEV,OACI,oCACI,sBAAK9C,UAAU,yCAAf,UACI,qBAAKA,UAAU,4DAAf,SAEQmF,GAAWC,EACL,2CAASkB,EAAcnB,GAASnC,QAAQ,IAAK,QAA7C,oBAAuDsD,EAAclB,GAASpC,QAAQ,IAAK,WAC3F,8EAGd,qBAAKhD,UAAU,mCAAf,SACI,cAACS,EAAD,CAAcE,WAAY6B,GAAQA,EAAKE,OAAQhC,QAASA,SAGhE,sBAAKV,UAAU,iBAAf,UACK+B,EAAQ,oBAAI/B,UAAU,kCAAd,qEAAkE,GAC1E+B,EAAQA,EAAM5B,KAAI,SAAAX,GAAI,OAAI,cAACD,EAAD,CAA+BC,KAAMA,EAAMC,SAAUA,GAAjCD,EAAKK,SAA2C,SC5ChG,SAAS8G,EAAT,GAA4B,IAARnH,EAAO,EAAPA,KAI/B,OAFAE,QAAQC,IAAI,wBAGR,sBACIK,UAAS,uGAAoH,MAAlBR,EAAKe,IAAIH,KAAe,kBAAoB,GAA9I,KADb,UAGI,qBAAKJ,UAAU,mCAAf,SACI,8BACI,6BAAKR,EAAKsD,KAAK8D,2BAGvB,qBAAK5G,UAAU,+BAAf,SACKR,EAAKe,IAAI6C,S,YCZX,SAASyD,EAAT,GAAkC,IAAT9E,EAAQ,EAARA,MAEpCrC,QAAQC,IAAI,6BAEZ,IAAMqE,EAAMR,mBAmIZ,OAhIAC,qBAAU,WACN,GAAI1B,GAASiC,EAAIL,QAAS,CAEtB,IAAIyB,EAASD,EACbpD,EAAMuD,SAAQ,SAAA9F,KAEL4F,GAAWA,EAAU5F,EAAKsD,QAC3BsC,EAAU5F,EAAKsD,QAEdqC,GAAWA,EAAU3F,EAAKsD,QAC3BqC,EAAU3F,EAAKsD,SAIvB,IAAMgE,EAAa,GAEbC,EAAW,IAAIhE,KAAKoC,GAC1B4B,EAASC,QAAQ,GACjB,IAAMC,EAAW,IAAIlE,KAAKqC,GAG1B,IAFA6B,EAASD,QAAQ,GAEVD,GAAYE,EAAUF,EAASG,SAASH,EAASI,WAAa,GACjEL,EAAWzE,KAAK,IAAIU,KAAKgE,IAG7B,IAAMK,EAAS,GAEfN,EAAWxB,SAAQ,SAAAxC,GACfsE,EAAO/E,KAAKS,EAAKuE,cAAcxB,MAAM,EAAG,OAG5C,IAAMyB,EAAgB,GAChBC,EAAiB,GAEvBH,EAAO9B,SAAQ,SAACxC,EAAMzC,GAClB0B,EAAMuD,SAAQ,SAAA9F,GACNsD,IAAStD,EAAKsD,KAAKuE,cAAcxB,MAAM,EAAG,KACrCyB,EAAcjH,KACfiH,EAAcjH,GAAS,GAGtBkH,EAAelH,KAChBkH,EAAelH,GAAS,GAGN,MAAlBb,EAAKe,IAAIH,OACTkH,EAAcjH,IAAUb,EAAKe,IAAIA,KAGf,MAAlBf,EAAKe,IAAIH,OACTmH,EAAelH,IAAUb,EAAKe,IAAIA,YAMlD,IAAMiH,EAAiBF,EAAcnH,KAAI,SAAAX,GACrC,OAAgB,IAATA,EAAa,GAAKA,KAEvBiI,EAAkBF,EAAepH,KAAI,SAAAX,GACvC,OAAgB,IAATA,EAAa,GAAKA,KAGvBkI,EAAS,GAEXD,EAAgBE,MAAK,SAAAnI,GAAI,OAAIA,MAC7BkI,EAAOrF,KACH,CACIG,KAAMiF,EACNrH,KAAM,MACNwH,MAAO,CACHC,MAAM,EACNC,SAAU,SACVC,OAAQ,IAEZC,gBAAgB,EAChBC,gBAAiB,CACbC,MAAO,4BAEXC,SAAU,CACNC,MAAO,YAMnBZ,EAAeG,MAAK,SAAAnI,GAAI,OAAIA,MAC5BkI,EAAOrF,KACH,CACIG,KAAMgF,EACNpH,KAAM,MACNwH,MAAO,CACHC,MAAM,EACNC,SAAU,SACVC,OAAQ,IAGZC,gBAAgB,EAChBC,gBAAiB,CACbC,MAAO,4BAGXC,SAAU,CACNC,MAAO,YAOvBC,IAAarE,EAAIL,SAAS2E,UAAU,CAChCC,MAAO,CACHnI,KAAM,WACNoC,KAAM4E,EACNoB,UAAW,CAACC,SAAU,EAAGV,OAAQ,KAErCW,MAAO,CACHtI,KAAM,SAEVsH,WAIR,OAAO,eAGR,CAAC3F,IAGA,qBAAK/B,UAAU,uCAAf,SACI,qBACIgE,IAAKA,EACLE,MAAO,CAACyE,OAAQ,aCzIjB,SAASC,EAAT,GAA4C,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,WAAY/G,EAAQ,EAARA,MA+B9C,OA7BArC,QAAQC,IAAI,oBAEZ8D,qBAAU,WACN,IAAMsF,EAAM,SAAA1E,GACU,KAAdA,EAAE2E,SAAgC,IAAd3E,EAAE2E,SACtBF,KAKR,OADAjF,SAASC,iBAAiB,UAAWiF,GAAK,GACnC,WACHlF,SAASE,oBAAoB,UAAWgF,GAAK,MAElD,CAACF,EAAOC,IAEXrF,qBAAU,WAON,OANIoF,IACAhF,SAASoF,KAAK/E,MAAMgF,SAAW,UAK5B,WACHrF,SAASoF,KAAK/E,MAAMgF,SAAW,UAIpC,CAACL,IAEC9G,GAAU8G,EAKX,qBAAK7I,UAAU,iDAAf,SACI,qBAAKA,UAAU,0BAAf,SACI,sBAAKA,UAAU,OAAf,UACI,mBAAGA,UAAU,eAAb,SACI,sBACIA,UAAU,4EACVC,QAAS6I,EAFb,+HAMJ,qBAAK9I,UAAU,qCAAf,SACI,oBAAIA,UAAU,qBAAd,SACK6I,EAAMhJ,SASf,cAACgH,EAAD,CAAgB9E,MAAOA,IACvB,yBAAS/B,UAAU,iBAAnB,SACK+B,EAAM5B,KAAI,SAACX,EAAMa,GAAP,OAAiB,cAACsG,EAAD,CAAoDnH,KAAMA,GAA1CA,EAAKsD,KAAKqG,iBAAmB9I,eA3BlF,KChCA,SAAS+I,IACpB,MAAwBnD,qBAAxB,mBAAOzD,EAAP,KAAa9B,EAAb,KACA,EAA0BuF,qBAA1B,mBAAO4C,EAAP,KAAcpJ,EAAd,KAIA,OAFAC,QAAQC,IAAI,kBAGR,iCACI,cAACqG,EAAD,CACIxD,KAAMA,EACN9B,QAASA,EACTjB,SAAUA,IACd,cAACmJ,EAAD,CACIC,MAAOA,EACPC,WAAY,kBAAMrJ,EAAS,OAC3BsC,MAAOS,GAAQqG,EAAQrG,EAAKI,QAAO,SAAApD,GAAI,OAAIA,EAAK8D,QAAUuF,EAAMhJ,QAAQ,KAC5E,qBAAKG,UAAU,iCAAf,SACI,wBACII,KAAK,SACLJ,UAAU,4EACVC,QAAS,kBAAM4D,SAASwF,cAAc,IAAIC,MAAM,wBAHpD,SAKK9G,EAAO,mIAA4B,2GC3BxD,IAYe+G,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACd,EAAD,MAEJvF,SAASsG,eAAe,SAQ5BZ,M","file":"static/js/main.e3340f11.chunk.js","sourcesContent":["export const kaspiTypes = {\n    'Покупка': [\n        'покупка',\n        'покупки',\n        'покупок',\n    ],\n    'Перевод': [\n        'перевод',\n        'перевода',\n        'переводов',\n    ],\n    'Пополнение': [\n        'пополнение',\n        'пополнения',\n        'пополнений',\n    ],\n    'Снятие': [\n        'снятие',\n        'снятия',\n        'снятий',\n    ],\n}","\nexport const numberFormat = int => new Intl.NumberFormat('kz').format(int);\n","import {plural} from \"./helpers/plural\";\nimport {kaspiTypes} from \"./helpers/kaspi-types\";\nimport {numberFormat} from \"./helpers/number-format\";\n\nexport default function GroupListItem({item, setGroup}) {\n\n    console.log('GroupListItem.js: render');\n\n    const typeName = (name, count) => {\n        return (kaspiTypes[name] ? plural(kaspiTypes[name], count) : name);\n    };\n\n    return (\n        <div\n            className=\"border-t border-b sm:border-l sm:border-r sm:rounded bg-white px-3 py-2 flex justify-between cursor-pointer h-20\"\n            onClick={() => setGroup(item)}>\n            <div className=\"flex items-center justify-center\">\n                <div>\n                    <h3>{item.name}</h3>\n                    <div className=\"text-sm text-gray-500 mt-1\">\n                        {item.types ? item.types.map((type, index) =>\n                            <span key={type.name}>\n                                {index ? ', ' : ''} {type.count} {typeName(type.name, type.count)}\n                            </span>\n                        ) : ''}\n                    </div>\n                </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n                <span className=\"block text-right\">\n                    {parseInt(item.sum) ? numberFormat(item.sum) : ''}\n                </span>\n                {\n                    parseInt(item.sum2)\n                        ? <span className=\"block text-right text-green-500 mt-1\">+{numberFormat(item.sum2)}</span>\n                        : ''\n                }\n            </div>\n        </div>\n    );\n}\n","export function plural(forms, n) {\n    let idx;\n    if (n % 10 === 1 && n % 100 !== 11) {\n        idx = 0; // many\n    } else if (n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20)) {\n        idx = 1; // few\n    } else {\n        idx = 2; // one\n    }\n    return forms[idx] || '';\n}","import {useEffect, useRef} from \"react\";\n\nimport * as pdfjsLib from 'pdfjs-dist/legacy/build/pdf'\nimport PDFJSWorker from 'pdfjs-dist/legacy/build/pdf.worker.entry'\n\npdfjsLib.GlobalWorkerOptions.workerSrc = PDFJSWorker\n\nexport default function UploadButton({setData, dataExists}) {\n\n    console.log('UploadButton.js: render');\n\n    const parsePdf = async rawData => {\n        const pdf = await pdfjsLib.getDocument(rawData).promise;\n\n        const pages = await Promise.all([...Array(pdf.numPages).keys()].map(async num => {\n            const page = await pdf.getPage(num + 1);\n            return await page.getTextContent();\n        }));\n\n        const pagesGroupByLine = pages.map(item => {\n            const groupBy = function (xs) {\n                return xs.reduce(function (rv, x) {\n                    let v = x.transform[5];\n                    (rv[v] = rv[v] || []).push(x.str.trim());\n                    return rv;\n                }, {});\n            };\n            return Object.values(groupBy(item.items));\n        });\n\n        let data = pagesGroupByLine.flat();\n\n        data = data.map(item => {\n            if (item.length === 8) {\n                item.shift();\n            }\n            return item;\n        });\n\n        data = data.filter(item => {\n            return item.length === 7 && `${item[0]}`.match(/^\\d{2}\\.\\d{2}\\.\\d{2}$/);\n        });\n\n\n        data = data.map(item => {\n            let date = new Date(item[0].replace(/(\\d{2})\\.(\\d{2})\\.(\\d{2})/, '20$3-$2-$1'));\n            let sum = item[2];\n            let type = item[4];\n            let descrRaw = item[6].replace('  ', ' ');\n            let descrWithoutMiddleName = descrRaw.replace(/^([^ ]+) [^ ]+ ([^ ]+\\.)$/, '$1 $2');\n\n            let sumParse = sum.match(/^(\\+|-) (.*?) ₸$/);\n\n            sum = {\n                raw: sum,\n                type: sumParse[1],\n                sum: parseFloat(sumParse[2].replace(' ', '').replace(',', '.')),\n            }\n\n            return {\n                date,\n                sum,\n                type,\n                descr: descrWithoutMiddleName,\n                descrRaw,\n            };\n        });\n\n        setData(data);\n    }\n\n    const handleFileUpload = e => {\n        const file = e.target.files[0];\n        if (!file) {\n            return;\n        }\n        const fr = new FileReader();\n        fr.onload = e => parsePdf(new Uint8Array(e.target.result));\n        fr.readAsArrayBuffer(file)\n    }\n\n    const inputFile = useRef();\n\n    useEffect(() => {\n        const f = () => {\n            inputFile.current.click()\n        }\n        document.addEventListener(\"open-upload-dialog\", f, false);\n        return () => {\n            document.removeEventListener(\"open-upload-dialog\", f, false);\n        }\n    }, []);\n\n    return (\n        <div className={dataExists ? '' : 'hidden'}>\n            <button\n                type=\"button\"\n                className=\"border bg-blue-500 hover:bg-blue-400 text-white py-2 px-3 rounded shadow\"\n                onClick={() => inputFile.current.click()}\n            >\n                {dataExists ? 'Загрузить новую выписку' : 'Загрузить выписку'}\n            </button>\n            <input\n                type=\"file\"\n                ref={inputFile}\n                accept=\".pdf\"\n                style={{display: \"none\"}}\n                onChange={handleFileUpload}\n            />\n        </div>\n    );\n}","export const kaspiData2 = (json2) => {\n\n\n\n    if(!json2) {\n        return {\n            items: null,\n            minDate: null,\n            maxDate: null,\n        }\n    }\n\n    const groupBy = function (xs) {\n        return xs.reduce(function (rv, x) {\n            let v = '_' + x.descr;\n            (rv[v] = rv[v] || []).push(x);\n            return rv;\n        }, {});\n    };\n\n    let data2 = groupBy(json2);\n\n    let data = [];\n    const create = (id, name, sum, sum2, types) => data.push({id, name, sum, sum2, types})\n\n    let minDate, maxDate;\n\n    Object.keys(data2).forEach((key) => {\n        let plus = 0;\n        let minus = 0;\n        const _types = {};\n\n        data2[key].forEach((item) => {\n            if (item.sum.type === '-') {\n                minus += item.sum.sum;\n            }\n\n            if (item.sum.type === '+') {\n                plus += item.sum.sum;\n            }\n\n            //\n            if (!_types[item.type]) {\n                _types[item.type] = 0\n            }\n            ++_types[item.type];\n\n\n            // min/max dates\n            if (!minDate || minDate > item.date) {\n                minDate = item.date;\n            }\n\n            if (!maxDate || maxDate < item.date) {\n                maxDate = item.date;\n            }\n        });\n\n        //\n        const types = Object.keys(_types).map(key => {\n            return {\n                name: key,\n                count: _types[key],\n            }\n        })\n\n        create(key, key.slice(1), minus, plus, types);\n    });\n\n    function compare(a, b) {\n        if (a.sum > b.sum) {\n            return -1;\n        }\n        if (a.sum < b.sum) {\n            return 1;\n        }\n        if (a.sum2 > b.sum2) {\n            return -1;\n        }\n        if (a.sum2 < b.sum2) {\n            return 1;\n        }\n        return 0;\n    }\n\n    data = data.sort(compare);\n\n    return {\n        items: data,\n        minDate,\n        maxDate,\n    }\n}\n","import {useEffect, useState} from \"react\";\n\nimport GroupListItem from \"./GroupListItem\";\nimport UploadButton from \"./UploadButton\";\nimport {kaspiData2} from \"./helpers/kaspi-parse2\";\n\nexport default function GroupList({setGroup, data, setData}) {\n\n    console.log('GroupList.js: render');\n\n    const [items, setItems] = useState();\n    const [maxDate, setMaxDate] = useState();\n    const [minDate, setMinDate] = useState();\n\n    useEffect(() => {\n        if(data) {\n            const _data = kaspiData2(data);\n            setItems(_data.items);\n            setMaxDate(_data.maxDate);\n            setMinDate(_data.minDate);\n        }\n    }, [data]);\n\n    const dateFormatter = date => new Intl.DateTimeFormat(\"ru\", {\n        year: \"numeric\",\n        month: \"long\",\n        day: \"numeric\"\n    }).format(date);\n\n    return (\n        <section>\n            <div className=\"mt-3 flex justify-between px-3 sm:px-0\">\n                <div className=\"text-white bg-red-500 py-2 px-3 rounded flex items-center\">\n                    {\n                        minDate && maxDate\n                            ? <span>С {dateFormatter(minDate).replace(' ', ' ')} по {dateFormatter(maxDate).replace(' ', ' ')}</span>\n                            : 'Каспи выписка'\n                    }\n                </div>\n                <div className=\"flex items-center justify-center\">\n                    <UploadButton dataExists={data && data.length} setData={setData}/>\n                </div>\n            </div>\n            <div className=\"space-y-2 mt-5\">\n                {items ? <h2 className=\"font-bold text-3xl px-3 sm:px-0\">По группам</h2> : '' }\n                {items ? items.map(item => <GroupListItem key={item.name} item={item} setGroup={setGroup}/>) : ''}\n            </div>\n        </section>\n    );\n}\n","\nexport default function GroupItem({item}) {\n\n    console.log('GroupItem.js: render');\n\n    return (\n        <div\n            className={`border-t border-b sm:border-l sm:border-r sm:rounded bg-white px-3 py-2 flex justify-between ${item.sum.type === '+' ? ' text-green-500' : ''} `}\n        >\n            <div className=\"flex items-center justify-center\">\n                <div>\n                    <h3>{item.date.toLocaleDateString()}</h3>\n                </div>\n            </div>\n            <div className=\"flex flex-col justify-center\">\n                {item.sum.raw}\n            </div>\n        </div>\n    );\n}\n","import {useEffect, useRef} from 'react';\nimport * as echarts from \"echarts\";\n\nexport default function GroupItemChart({items}) {\n\n    console.log('GroupItemChart.js: render');\n\n    const ref = useRef();\n\n\n    useEffect(() => {\n        if (items && ref.current) {\n\n            let maxDate, minDate;\n            items.forEach(item => {\n\n                if (!maxDate || maxDate < item.date) {\n                    maxDate = item.date;\n                }\n                if (!minDate || minDate > item.date) {\n                    minDate = item.date;\n                }\n\n            })\n            const monthsList = [];\n\n            const _minDate = new Date(minDate);\n            _minDate.setDate(1);\n            const _maxDate = new Date(maxDate);\n            _maxDate.setDate(1);\n\n            for (; _minDate <= _maxDate; _minDate.setMonth(_minDate.getMonth() + 1)) {\n                monthsList.push(new Date(_minDate));\n            }\n\n            const chartX = [];\n\n            monthsList.forEach(date => {\n                chartX.push(date.toISOString().slice(0, 7));\n            })\n\n            const chartListPlus = [];\n            const chartListMinus = [];\n\n            chartX.forEach((date, index) => {\n                items.forEach(item => {\n                    if (date === item.date.toISOString().slice(0, 7)) {\n                        if (!chartListPlus[index]) {\n                            chartListPlus[index] = 0;\n                        }\n\n                        if (!chartListMinus[index]) {\n                            chartListMinus[index] = 0;\n                        }\n\n                        if (item.sum.type === '+') {\n                            chartListPlus[index] += item.sum.sum;\n                        }\n\n                        if (item.sum.type === '-') {\n                            chartListMinus[index] += item.sum.sum;\n                        }\n                    }\n                });\n            });\n\n            const chartListPlus2 = chartListPlus.map(item => {\n                return item === 0 ? '' : item\n            })\n            const chartListMinus2 = chartListMinus.map(item => {\n                return item === 0 ? '' : item\n            })\n\n            const series = [];\n\n            if (chartListMinus2.some(item => item)) {\n                series.push(\n                    {\n                        data: chartListMinus2,\n                        type: 'bar',\n                        label: {\n                            show: true,\n                            position: 'inside',\n                            rotate: 90,\n                        },\n                        showBackground: true,\n                        backgroundStyle: {\n                            color: 'rgba(180, 180, 180, 0.2)',\n                        },\n                        emphasis: {\n                            focus: 'series'\n                        },\n                    }\n                );\n            }\n\n            if (chartListPlus2.some(item => item)) {\n                series.push(\n                    {\n                        data: chartListPlus2,\n                        type: 'bar',\n                        label: {\n                            show: true,\n                            position: 'inside',\n                            rotate: 90,\n                        },\n\n                        showBackground: true,\n                        backgroundStyle: {\n                            color: 'rgba(180, 180, 180, 0.2)'\n                        },\n\n                        emphasis: {\n                            focus: 'series'\n                        },\n                    }\n                );\n            }\n\n            // Draw the chart\n            echarts.init(ref.current).setOption({\n                xAxis: {\n                    type: 'category',\n                    data: chartX,\n                    axisLabel: {interval: 0, rotate: 30}\n                },\n                yAxis: {\n                    type: 'value'\n                },\n                series\n            });\n        }\n\n        return () => {\n\n        }\n    }, [items]);\n\n    return (\n        <div className=\"-mt-8 px-3 sm:px-0 overflow-x-scroll\">\n            <div\n                ref={ref}\n                style={{height: '400px'}}/>\n        </div>\n    );\n};\n","import {useEffect} from \"react\";\n\nimport GroupItem from \"./GroupItem\";\nimport GroupItemChart from \"./GroupItemChart\";\n\nexport default function Group({group, resetGroup, items}) {\n\n    console.log('Group.js: render');\n\n    useEffect(() => {\n        const esc = e => {\n            if (e.keyCode === 27 || e.keyCode === 8) {\n                resetGroup();\n            }\n        }\n\n        document.addEventListener(\"keydown\", esc, false);\n        return () => {\n            document.removeEventListener(\"keydown\", esc, false);\n        }\n    }, [group, resetGroup]);\n\n    useEffect(() => {\n        if (group) {\n            document.body.style.overflow = 'hidden';\n            // document.body.style.position = 'relative';\n            // document.body.style.height = '100%';\n        }\n\n        return () => {\n            document.body.style.overflow = 'auto';\n            // document.body.style.position = 'unset';\n            // document.body.style.height = 'auto';\n        }\n    }, [group]);\n\n    if (!items || !group) {\n        return null;\n    }\n\n    return (\n        <div className=\"fixed bg-gray-100 overflow-y-auto z-10 inset-0\">\n            <div className=\"max-w-screen-sm mx-auto\">\n                <div className=\"mt-4\">\n                    <p className=\"px-3 sm:px-0\">\n                        <span\n                            className=\"bg-blue-500 hover:bg-blue-400 text-white px-3 py-2 rounded cursor-pointer\"\n                            onClick={resetGroup}>\n                            ← Показать все группы\n                        </span>\n                    </p>\n                    <div className=\"bg-gray-100 my-3 px-3 sm:px-0 mt-7\">\n                        <h3 className=\"font-bold text-4xl\">\n                            {group.name}\n                        </h3>\n                        {/*<p>*/}\n                        {/*    {group.sum}*/}\n                        {/*</p>*/}\n                        {/*<p>*/}\n                        {/*    +{group.sum2}*/}\n                        {/*</p>*/}\n                    </div>\n                    <GroupItemChart items={items}/>\n                    <section className=\"space-y-1 mb-5\">\n                        {items.map((item, index) => <GroupItem key={item.date.toLocaleString() + index} item={item}/>)}\n                    </section>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import {useState} from \"react\";\n\nimport GroupList from \"./GroupList\";\nimport Group from \"./Group\";\n\nexport default function App() {\n    const [data, setData] = useState();\n    const [group, setGroup] = useState();\n\n    console.log('App.js: render');\n\n    return (\n        <main>\n            <GroupList\n                data={data}\n                setData={setData}\n                setGroup={setGroup}/>\n            <Group\n                group={group}\n                resetGroup={() => setGroup(null)}\n                items={data && group ? data.filter(item => item.descr === group.name) : []}/>\n            <div className=\"grid place-content-center h-96\">\n                <button\n                    type=\"button\"\n                    className=\"border bg-blue-500 hover:bg-blue-400 text-white py-6 px-14 rounded shadow\"\n                    onClick={() => document.dispatchEvent(new Event(\"open-upload-dialog\"))}\n                >\n                    {data ? 'Загрузить новую выписку' : 'Загрузить выписку'}\n                </button>\n            </div>\n        </main>\n    );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n// reportWebVitals(console.log);\nreportWebVitals();\n"],"sourceRoot":""}